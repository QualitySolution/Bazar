#!/bin/sh

#Устанавливаем нужные переменные окружения
export DYLD_FALLBACK_LIBRARY_PATH="/Library/Frameworks/Mono.framework/Versions/Current/lib:$DYLD_FALLBACK_LIBRARY_PATH:/usr/lib:$DIR"

#Получаем папку с приложением
DIR=$(cd "$(dirname "$0")"; pwd)
cd "$DIR"

#Требования к версии Mono
REQUIRED_MAJOR=3
REQUIRED_MINOR=0
VERSION_TITLE="Установка Mono Framework"
VERSION_MSG="Приложению для работы требуется Mono Framework версии не ниже $REQUIRED_MAJOR.$REQUIRED_MINOR. Установить? После установки потребуется повторно запустить приложение."

#Проверка наличия и/или версии Mono
MONO_VERSION="$(mono --version | grep 'Mono JIT compiler version ' |  cut -f5 -d\ )"
MONO_VERSION_MAJOR="$(echo $MONO_VERSION | cut -f1 -d.)"
MONO_VERSION_MINOR="$(echo $MONO_VERSION | cut -f2 -d.)"
if [ -z "$MONO_VERSION" ] \
	|| [ $MONO_VERSION_MAJOR -lt $REQUIRED_MAJOR ] \
	|| [ $MONO_VERSION_MAJOR -eq $REQUIRED_MAJOR -a $MONO_VERSION_MINOR -lt $REQUIRED_MINOR ] 
then
#Если Mono нет или старая версия предлагаем установить.
	osascript \
	-e "set question to display dialog \"$VERSION_MSG\" with title \"$VERSION_TITLE\" buttons {\"Отмена\", \"Установить\"} default button 2" \
	-e "if button returned of question is equal to \"Установить\" then do shell script \"open ../Mono/mono.pkg\" "
	echo "$VERSION_TITLE"
	echo "$VERSION_MSG"
	exit 1
fi

#Если все ок - запускаем.
exec /Library/Frameworks/Mono.framework/Versions/Current/bin/mono ./BazAr.exe
